// Generated by view binder compiler. Do not edit!
package com.example.muzilla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.muzilla.CustomEditText;
import com.example.muzilla.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CustomEditText myaudioInput;

  @NonNull
  public final CardView myaudioInputLayout;

  @NonNull
  public final RecyclerView playlistsList;

  @NonNull
  public final RecyclerView tracksListMain;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull CustomEditText myaudioInput, @NonNull CardView myaudioInputLayout,
      @NonNull RecyclerView playlistsList, @NonNull RecyclerView tracksListMain) {
    this.rootView = rootView;
    this.myaudioInput = myaudioInput;
    this.myaudioInputLayout = myaudioInputLayout;
    this.playlistsList = playlistsList;
    this.tracksListMain = tracksListMain;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.myaudio_input;
      CustomEditText myaudioInput = ViewBindings.findChildViewById(rootView, id);
      if (myaudioInput == null) {
        break missingId;
      }

      id = R.id.myaudio_input_layout;
      CardView myaudioInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (myaudioInputLayout == null) {
        break missingId;
      }

      id = R.id.playlists_list;
      RecyclerView playlistsList = ViewBindings.findChildViewById(rootView, id);
      if (playlistsList == null) {
        break missingId;
      }

      id = R.id.tracks_list_main;
      RecyclerView tracksListMain = ViewBindings.findChildViewById(rootView, id);
      if (tracksListMain == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, myaudioInput, myaudioInputLayout,
          playlistsList, tracksListMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
