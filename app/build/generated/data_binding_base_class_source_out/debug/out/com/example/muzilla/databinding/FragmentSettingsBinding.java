// Generated by view binder compiler. Do not edit!
package com.example.muzilla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.muzilla.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText accessTokenInput;

  @NonNull
  public final CardView accessTokenInputCard;

  @NonNull
  public final Button chooseWallButton;

  @NonNull
  public final TextView labelChooseWall;

  @NonNull
  public final TextView labelToken;

  @NonNull
  public final TextView settingstitle;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText accessTokenInput, @NonNull CardView accessTokenInputCard,
      @NonNull Button chooseWallButton, @NonNull TextView labelChooseWall,
      @NonNull TextView labelToken, @NonNull TextView settingstitle) {
    this.rootView = rootView;
    this.accessTokenInput = accessTokenInput;
    this.accessTokenInputCard = accessTokenInputCard;
    this.chooseWallButton = chooseWallButton;
    this.labelChooseWall = labelChooseWall;
    this.labelToken = labelToken;
    this.settingstitle = settingstitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.access_token_input;
      EditText accessTokenInput = ViewBindings.findChildViewById(rootView, id);
      if (accessTokenInput == null) {
        break missingId;
      }

      id = R.id.access_token_input_card;
      CardView accessTokenInputCard = ViewBindings.findChildViewById(rootView, id);
      if (accessTokenInputCard == null) {
        break missingId;
      }

      id = R.id.choose_wall_button;
      Button chooseWallButton = ViewBindings.findChildViewById(rootView, id);
      if (chooseWallButton == null) {
        break missingId;
      }

      id = R.id.label_choose_wall;
      TextView labelChooseWall = ViewBindings.findChildViewById(rootView, id);
      if (labelChooseWall == null) {
        break missingId;
      }

      id = R.id.label_token;
      TextView labelToken = ViewBindings.findChildViewById(rootView, id);
      if (labelToken == null) {
        break missingId;
      }

      id = R.id.settingstitle;
      TextView settingstitle = ViewBindings.findChildViewById(rootView, id);
      if (settingstitle == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, accessTokenInput,
          accessTokenInputCard, chooseWallButton, labelChooseWall, labelToken, settingstitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
